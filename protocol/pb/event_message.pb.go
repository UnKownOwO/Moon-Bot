// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.5
// source: event/event_message.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 表示消息发送者的信息
type MessageSender struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 发送者 QQ 号
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`            // 昵称
	Sex      string `protobuf:"bytes,3,opt,name=sex,proto3" json:"sex,omitempty"`                      // 性别, male 或 female 或 unknown
	Age      int32  `protobuf:"varint,4,opt,name=age,proto3" json:"age,omitempty"`                     // 年龄
	// 当私聊类型为群临时会话时的额外字段
	GroupId *int64 `protobuf:"varint,5,opt,name=group_id,json=groupId,proto3,oneof" json:"group_id,omitempty"` // 临时群消息来源群号
	// 如果是群聊
	Card  *string `protobuf:"bytes,6,opt,name=card,proto3,oneof" json:"card,omitempty"`    // 群名片／备注
	Area  *string `protobuf:"bytes,7,opt,name=area,proto3,oneof" json:"area,omitempty"`    // 地区
	Level *string `protobuf:"bytes,8,opt,name=level,proto3,oneof" json:"level,omitempty"`  // 成员等级
	Role  *string `protobuf:"bytes,9,opt,name=role,proto3,oneof" json:"role,omitempty"`    // 角色, owner 或 admin 或 member
	Title *string `protobuf:"bytes,10,opt,name=title,proto3,oneof" json:"title,omitempty"` // 专属头衔
}

func (x *MessageSender) Reset() {
	*x = MessageSender{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_event_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageSender) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageSender) ProtoMessage() {}

func (x *MessageSender) ProtoReflect() protoreflect.Message {
	mi := &file_event_event_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageSender.ProtoReflect.Descriptor instead.
func (*MessageSender) Descriptor() ([]byte, []int) {
	return file_event_event_message_proto_rawDescGZIP(), []int{0}
}

func (x *MessageSender) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MessageSender) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *MessageSender) GetSex() string {
	if x != nil {
		return x.Sex
	}
	return ""
}

func (x *MessageSender) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *MessageSender) GetGroupId() int64 {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return 0
}

func (x *MessageSender) GetCard() string {
	if x != nil && x.Card != nil {
		return *x.Card
	}
	return ""
}

func (x *MessageSender) GetArea() string {
	if x != nil && x.Area != nil {
		return *x.Area
	}
	return ""
}

func (x *MessageSender) GetLevel() string {
	if x != nil && x.Level != nil {
		return *x.Level
	}
	return ""
}

func (x *MessageSender) GetRole() string {
	if x != nil && x.Role != nil {
		return *x.Role
	}
	return ""
}

func (x *MessageSender) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

// 匿名信息
type MessageAnonymous struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`    // 匿名用户 ID
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"` // 匿名用户名称
	Flag string `protobuf:"bytes,3,opt,name=flag,proto3" json:"flag,omitempty"` // 匿名用户 flag, 在调用禁言 API 时需要传入
}

func (x *MessageAnonymous) Reset() {
	*x = MessageAnonymous{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_event_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageAnonymous) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageAnonymous) ProtoMessage() {}

func (x *MessageAnonymous) ProtoReflect() protoreflect.Message {
	mi := &file_event_event_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageAnonymous.ProtoReflect.Descriptor instead.
func (*MessageAnonymous) Descriptor() ([]byte, []int) {
	return file_event_event_message_proto_rawDescGZIP(), []int{1}
}

func (x *MessageAnonymous) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MessageAnonymous) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MessageAnonymous) GetFlag() string {
	if x != nil {
		return x.Flag
	}
	return ""
}

// 消息事件上报
type MessageEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time        int64  `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`                                 // 事件发生的时间戳
	SelfId      int64  `protobuf:"varint,2,opt,name=self_id,json=selfId,proto3" json:"self_id,omitempty"`               // 收到事件的机器人 QQ 号
	PostType    string `protobuf:"bytes,3,opt,name=post_type,json=postType,proto3" json:"post_type,omitempty"`          // 上报类型
	MessageType string `protobuf:"bytes,4,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"` // 消息类型
	// sub_type 在私聊中如果是好友则是 friend, 如果是群临时会话则是 group,
	// 如果是在群中自身发送则是 group_self
	// 在群聊中正常消息是 normal, 匿名消息是 anonymous, 系统提示
	// (如「管理员已禁止群内匿名聊天」 ) 是 notice
	SubType    string         `protobuf:"bytes,5,opt,name=sub_type,json=subType,proto3" json:"sub_type,omitempty"`          // 消息子类型
	MessageId  int32          `protobuf:"varint,6,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`   // 消息 ID
	UserId     int64          `protobuf:"varint,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`            // 发送者 QQ 号
	Message    string         `protobuf:"bytes,8,opt,name=message,proto3" json:"message,omitempty"`                         // 消息内容
	RawMessage string         `protobuf:"bytes,9,opt,name=raw_message,json=rawMessage,proto3" json:"raw_message,omitempty"` // 原始消息内容
	Font       int32          `protobuf:"varint,10,opt,name=font,proto3" json:"font,omitempty"`                             // 字体
	Sender     *MessageSender `protobuf:"bytes,11,opt,name=sender,proto3" json:"sender,omitempty"`                          // 发送人信息
	// 私聊消息
	TargetId   *int64 `protobuf:"varint,12,opt,name=target_id,json=targetId,proto3,oneof" json:"target_id,omitempty"`       // 收到私聊消息的机器人 QQ 号
	TempSource *int32 `protobuf:"varint,13,opt,name=temp_source,json=tempSource,proto3,oneof" json:"temp_source,omitempty"` // 临时会话来源
	// 群聊消息
	GroupId   *int64            `protobuf:"varint,14,opt,name=group_id,json=groupId,proto3,oneof" json:"group_id,omitempty"` // 群号
	Anonymous *MessageAnonymous `protobuf:"bytes,15,opt,name=anonymous,proto3,oneof" json:"anonymous,omitempty"`             // 匿名信息, 如果不是匿名消息则为 null
}

func (x *MessageEvent) Reset() {
	*x = MessageEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_event_event_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageEvent) ProtoMessage() {}

func (x *MessageEvent) ProtoReflect() protoreflect.Message {
	mi := &file_event_event_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageEvent.ProtoReflect.Descriptor instead.
func (*MessageEvent) Descriptor() ([]byte, []int) {
	return file_event_event_message_proto_rawDescGZIP(), []int{2}
}

func (x *MessageEvent) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *MessageEvent) GetSelfId() int64 {
	if x != nil {
		return x.SelfId
	}
	return 0
}

func (x *MessageEvent) GetPostType() string {
	if x != nil {
		return x.PostType
	}
	return ""
}

func (x *MessageEvent) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *MessageEvent) GetSubType() string {
	if x != nil {
		return x.SubType
	}
	return ""
}

func (x *MessageEvent) GetMessageId() int32 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *MessageEvent) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *MessageEvent) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MessageEvent) GetRawMessage() string {
	if x != nil {
		return x.RawMessage
	}
	return ""
}

func (x *MessageEvent) GetFont() int32 {
	if x != nil {
		return x.Font
	}
	return 0
}

func (x *MessageEvent) GetSender() *MessageSender {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *MessageEvent) GetTargetId() int64 {
	if x != nil && x.TargetId != nil {
		return *x.TargetId
	}
	return 0
}

func (x *MessageEvent) GetTempSource() int32 {
	if x != nil && x.TempSource != nil {
		return *x.TempSource
	}
	return 0
}

func (x *MessageEvent) GetGroupId() int64 {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return 0
}

func (x *MessageEvent) GetAnonymous() *MessageAnonymous {
	if x != nil {
		return x.Anonymous
	}
	return nil
}

var File_event_event_message_proto protoreflect.FileDescriptor

var file_event_event_message_proto_rawDesc = []byte{
	0x0a, 0x19, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x70, 0x62, 0x22,
	0xc5, 0x02, 0x0a, 0x0d, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x78, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x65, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x07,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x63, 0x61,
	0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x63, 0x61, 0x72, 0x64,
	0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x02, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x05, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x19, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x05, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x63, 0x61, 0x72,
	0x64, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x4a, 0x0a, 0x10, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66,
	0x6c, 0x61, 0x67, 0x22, 0xa2, 0x04, 0x0a, 0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x65, 0x6c, 0x66,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x66, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x72, 0x61, 0x77, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x61, 0x77, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x66, 0x6f, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x66,
	0x6f, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x70, 0x62, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x53, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x20,
	0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x00, 0x52, 0x08, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01,
	0x12, 0x24, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x05, 0x48, 0x01, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x53, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x48, 0x02, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x09, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d,
	0x6f, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x62, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x48,
	0x03, 0x52, 0x09, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x88, 0x01, 0x01, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x42, 0x0e, 0x0a,
	0x0c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x5f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x61,
	0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2f, 0x3b, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_event_event_message_proto_rawDescOnce sync.Once
	file_event_event_message_proto_rawDescData = file_event_event_message_proto_rawDesc
)

func file_event_event_message_proto_rawDescGZIP() []byte {
	file_event_event_message_proto_rawDescOnce.Do(func() {
		file_event_event_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_event_event_message_proto_rawDescData)
	})
	return file_event_event_message_proto_rawDescData
}

var file_event_event_message_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_event_event_message_proto_goTypes = []interface{}{
	(*MessageSender)(nil),    // 0: pb.MessageSender
	(*MessageAnonymous)(nil), // 1: pb.MessageAnonymous
	(*MessageEvent)(nil),     // 2: pb.MessageEvent
}
var file_event_event_message_proto_depIdxs = []int32{
	0, // 0: pb.MessageEvent.sender:type_name -> pb.MessageSender
	1, // 1: pb.MessageEvent.anonymous:type_name -> pb.MessageAnonymous
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_event_event_message_proto_init() }
func file_event_event_message_proto_init() {
	if File_event_event_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_event_event_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageSender); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_event_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageAnonymous); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_event_event_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_event_event_message_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_event_event_message_proto_msgTypes[2].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_event_event_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_event_event_message_proto_goTypes,
		DependencyIndexes: file_event_event_message_proto_depIdxs,
		MessageInfos:      file_event_event_message_proto_msgTypes,
	}.Build()
	File_event_event_message_proto = out.File
	file_event_event_message_proto_rawDesc = nil
	file_event_event_message_proto_goTypes = nil
	file_event_event_message_proto_depIdxs = nil
}
